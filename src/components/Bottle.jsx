/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { GenerateInitMaterials, GenerateAnimations, LoadTextures } from "./Utils";
import { useFrame, useThree } from "@react-three/fiber";
import gsap, { Power4 } from "gsap";

export function Bottle(props) {
  const { nodes } = useGLTF("/Bottle.glb");

  const { cristalMaterial, sodaMaterial, brandMaterial } =
    GenerateInitMaterials();
  const scene = useThree((state) => state.scene);
  const timelines = gsap.timeline({
    defaults: { duration: 2, ease: Power4.easeInOut },
  });
  const scroll = useScroll();

  const colorsMaterial = {
    cristal: "#8c8c8c",
    soda: "#000"
  }

  useLayoutEffect(() => {
    const textures = LoadTextures(["FalloutBoy", "Classic", "Quantum", "Sunset"]);
    const animations = GenerateAnimations(scene, colorsMaterial, cristalMaterial, sodaMaterial, brandMaterial, textures);
    animations.map(animation => {
        timelines.to(animation.target, {...animation.animationsProperties}, animation.pointTime);
    });
  }, []);

  useFrame(() => {
    timelines.seek(scroll.offset * timelines.duration());
  });
  return (
    <group name="BottleGroup" {...props} dispose={null}>
      <mesh
        name="Bottle"
        geometry={nodes.Bottle.geometry}
        material={cristalMaterial}
      />
      <mesh
        name="Soda"
        geometry={nodes.Soda.geometry}
        material={sodaMaterial}
      />
      <mesh
        name="Brand"
        geometry={nodes.Brand.geometry}
        material={brandMaterial}
      />
      <mesh name="Cap" geometry={nodes.Cap.geometry} material={brandMaterial} />
    </group>
  );
}

useGLTF.preload("/Bottle.glb");
